@page "/"
@using client.Services
@using client.Models
@inject IShipmentService ShipmentService

<PageTitle>Dashboard - Container Shipment Tracker</PageTitle>

<div class="row mb-4">
    <div class="col-12">
        <h2 class="display-4 text-primary mb-3">
            <i class="fas fa-tachometer-alt me-3"></i>
            Dashboard
        </h2>
        <p class="lead">Welcome to the Container Shipment Tracker. Monitor your shipments in real-time.</p>
    </div>
</div>

@if (loading)
{
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
        <p class="mt-2">Loading dashboard...</p>
    </div>
}
else
{
    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3 mb-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@totalShipments</h4>
                            <p class="card-text">Total Shipments</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-ship fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@inTransitCount</h4>
                            <p class="card-text">In Transit</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-route fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-warning text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@delayedCount</h4>
                            <p class="card-text">Delayed</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4 class="card-title">@deliveredCount</h4>
                            <p class="card-text">Delivered</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Shipments -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">
                        <i class="fas fa-clock me-2"></i>
                        Recent Shipments
                    </h5>
                    <a href="/shipments" class="btn btn-outline-primary btn-sm">
                        View All <i class="fas fa-arrow-right ms-1"></i>
                    </a>
                </div>
                <div class="card-body">
                    @if (shipments.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th>Container ID</th>
                                        <th>Route</th>
                                        <th>Status</th>
                                        <th>ETA</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var shipment in shipments.Take(5))
                                    {
                                        <tr>
                                            <td>
                                                <strong>@shipment.ContainerId</strong>
                                            </td>
                                            <td>
                                                @shipment.OriginPort
                                                <i class="fas fa-arrow-right mx-2"></i>
                                                @shipment.DestinationPort
                                            </td>
                                            <td>
                                                <span class="badge @GetStatusBadgeClass(shipment.Status)">
                                                    @shipment.Status
                                                </span>
                                            </td>
                                            <td>
                                                @shipment.Eta.ToString("MMM dd, yyyy")
                                            </td>
                                            <td>
                                                <a href="/shipments/@shipment.Id" class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-ship fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No shipments found</h5>
                            <p class="text-muted">Get started by adding your first shipment.</p>
                            <a href="/shipments/create" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>
                                Add Shipment
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    private List<Shipment> shipments = new();
    private bool loading = true;
    private int totalShipments = 0;
    private int inTransitCount = 0;
    private int delayedCount = 0;
    private int deliveredCount = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            shipments = await ShipmentService.GetShipmentsAsync();
            CalculateStatistics();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading dashboard: {ex.Message}");
        }
        finally
        {
            loading = false;
        }
    }

    private void CalculateStatistics()
    {
        totalShipments = shipments.Count;
        inTransitCount = shipments.Count(s => s.Status == "In Transit");
        delayedCount = shipments.Count(s => s.Status == "Delayed");
        deliveredCount = shipments.Count(s => s.Status == "Delivered");
    }

    private string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "In Transit" => "bg-success",
            "Delayed" => "bg-warning",
            "Delivered" => "bg-info",
            "Arrived at Port" => "bg-primary",
            _ => "bg-secondary"
        };
    }
}
